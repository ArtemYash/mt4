<!DOCTYPE html>
<html>
  <head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <title>Other constants</title>
  <meta name="keywords" content="CHARTS_MAX,CLR_NONE,clrNONE,CRYPT_AES128,CRYPT_AES256,CRYPT_ARCH_ZIP,CRYPT_BASE64,CRYPT_DES,CRYPT_HASH_MD5,CRYPT_HASH_SHA1,CRYPT_HASH_SHA256,EMPTY_VALUE,ENUM_CRYPT_METHOD,INVALID_HANDLE,IS_DEBUG_MODE,IS_PROFILE_MODE,WHOLE_ARRAY,WRONG_VALUE" />
  <link type="text/css" href="default.css" rel="stylesheet" />






</head>

<body style="background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;">



<table width="100%" border="0" cellpadding="0" cellspacing="0" style="margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
  <tr>
    <td valign="middle">
      <table style="margin: 10px 0" width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr valign="middle">
          <td class="nav">
<a class="h_m" href="index.htm">          MQL4/5 Reference </a> / <a class="h_m" href="constants.htm"> Standard Constants, Enumerations and Structures </a> / <a class="h_m" href="namedconstants.htm"> Named Constants </a>/ Other constants
          </td>
          <td align="right" style="white-space: nowrap; padding: 0 10px;">
          <a href="enum_pointer_type.htm"><img style="vertical-align:middle;" src="previous.png" alt="?????" width="27" height="27" border=0></a><!--
       --><a href="structures.htm"><img style="vertical-align:middle;margin-left: 7px;" src="next.png" alt="??????" width="27" height="27" border="0"></a>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>



<div id="help">
<p class="p_H1"><span class="f_H1">Other constants</span></p>
<p class="p_Text"><span class="f_Text">Special constants are used to indicate parameters and variables states. It can be one of the following values:</span></p>
<div style="text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table class="EnumTable" cellspacing="0" cellpadding="5" border="1" style="border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Constant</span></p>
</td>
<td style="vertical-align:top; width:33%; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Description</span></p>
</td>
<td style="vertical-align:top; width:33%; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Value</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">NULL</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_Normal"><span class="f_fortable"> Zero for any types. Also indicates empty state of the string</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">0</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">EMPTY</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Indicates empty state of the parameter</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">-1</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">EMPTY_VALUE</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Empty value in an indicator buffer. Default custom indicator empty value</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">2147483647 (0x7FFFFFFF)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">CLR_NONE, clrNONE</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Absence of color. Indicates empty state of colors</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">-1</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">CHARTS_MAX</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">The maximum possible number of simultaneously open charts in the terminal</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">100</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">INVALID_HANDLE</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Incorrect handle</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">-1</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">IS_DEBUG_MODE</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Flag that a mql4-program operates in debug mode</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">non zero in debug mode, otherwise zero</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">IS_PROFILE_MODE</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Flag that a mql4-program operates in profiling mode</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">non zero in profiling mode, otherwise zero</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">WHOLE_ARRAY</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Used with array functions. Indicates that all array elements will be processed. Means the number of items remaining until the end of the array, i.e., the entire array will be processed</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">0</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">WRONG_VALUE</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">The constant can be implicitly <a href="casting.htm" class="topiclink">cast</a> to any <a href="enumeration.htm" class="topiclink">enumeration</a> type</span></p>
</td>
<td style="vertical-align:top; width:33%; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">-1</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Text"><span class="f_Text">The <a href="void.htm" class="topiclink">NULL</a> constant can be assigned to a variable of any simple type or to an object structure or class pointer. The NULL assignment for a string variable means the full deinitialization of this variable.</span></p>
<p class="p_Text"><span class="f_Text">The EMPTY_VALUE constant usually corresponds to the values of indicators that are not shown in the chart. For example, for built-in indicator Standard Deviation with a period of 20, the line for the first 19 bars in the history are not shown in the chart.</span></p>
<p class="p_Text"><span class="f_Text">The CLR_NONE constant is used to outline the absence of color, it means that the <a href="objects.htm" class="topiclink">graphical object</a> or <a href="drawstyles.htm" class="topiclink">graphical series</a> of an indicator will not be plotted. This constant was not included into the <a href="webcolors.htm" class="topiclink">Web-color</a> constants list, but it can be applied everywhere where the color arguments are required.</span></p>
<p class="p_Text"><span class="f_Text">The INVALID_HANDLE constant can be used for checking file handles (see <a href="fileopen.htm" class="topiclink">FileOpen()</a> and <a href="filefindfirst.htm" class="topiclink">FileFindFirst()</a>). </span></p>
<p class="p_Text"><span class="f_Text">The WRONG_VALUE constant is intended for cases, when it is necessary to return value of an <a href="enumeration.htm" class="topiclink">enumeration</a>, and this must be a wrong value. For example, when we need to inform that a return value is a value from this enumeration. Let&#39;s consider as an example some function CheckLineStyle(), which returns the line style for an object, specified by its name. If at style check by ObjectGetInteger() the result is true, a value from <a href="drawstyles.htm#enum_line_style" class="topiclink">ENUM_LINE_STYLE</a> is returned; otherwise WRONG_VALUE is returned.</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #0000ff;">void</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">OnStart</span><span class="f_CodeExample">()</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(CheckLineStyle(</span><span class="f_CodeExample" style="color: #008080;">&quot;MyChartObject&quot;</span><span class="f_CodeExample">)==</span><span class="f_CodeExample" style="color: #0000ff;">WRONG_VALUE</span><span class="f_CodeExample">)</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">printf</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Error&nbsp;line&nbsp;style&nbsp;getting.&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #808080;">//|&nbsp;returns&nbsp;the&nbsp;line&nbsp;style&nbsp;for&nbsp;an&nbsp;object&nbsp;specified&nbsp;by&nbsp;its&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span>
<br><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #0000ff;">ENUM_LINE_STYLE</span><span class="f_CodeExample">&nbsp;CheckLineStyle(</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;name)</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">long</span><span class="f_CodeExample">&nbsp;style;</span>
<br><span class="f_CodeExample" style="color: #808080;">//---</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ObjectGetInteger</span><span class="f_CodeExample">(0,name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_STYLE</span><span class="f_CodeExample">,0,style))</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">return</span><span class="f_CodeExample">((</span><span class="f_CodeExample" style="color: #0000ff;">ENUM_LINE_STYLE</span><span class="f_CodeExample">)style);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">else</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">return</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">WRONG_VALUE</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;}</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Text"><span class="f_Text">The WHOLE_ARRAY constant is intended for functions that require specifying the number of elements in processed arrays:</span></p>
<ul style="text-indent:0px; padding-left:0; margin-top:0; margin-bottom:0; margin-left: 30px;list-style-position:outside; list-style-type:disc">
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 3px; margin-right: 17px; margin-bottom: 3px;"><span class="f_li"><a href="arraycopy.htm" class="topiclink">ArrayCopy()</a>;</span></li>
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 3px; margin-right: 17px; margin-bottom: 3px;"><span class="f_li"><a href="arrayminimum.htm" class="topiclink">ArrayMinimum()</a>; </span></li>
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 3px; margin-right: 17px; margin-bottom: 3px;"><span class="f_li"><a href="arraymaximum.htm" class="topiclink">ArrayMaximum()</a>;</span></li>
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px;"><span class="f_li"><a href="filereadarray.htm" class="topiclink">FileReadArray()</a>;</span></li>
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 3px; margin-right: 17px; margin-bottom: 3px;"><span class="f_li"><a href="filewritearray.htm" class="topiclink">FileWriteArray()</a>. </span></li>
</ul>
<p class="p_li"><span class="f_li">If you want to specify that all the array values from a specified position till the end must be processed, you should specify just the WHOLE_ARRAY value.</span></p>
<p class="p_Text"><span class="f_fortable">IS_PROFILE_MODE </span><span class="f_Text">constant &nbsp;allows changing a program operation for correct data collection in the profiling mode. Profiling allows measuring the execution time of the individual program fragments (usually comprising functions), as well as calculating the number of such calls. Sleep() function calls can be disabled to determine the execution time in the profiling mode, like in this example:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #808080;">//---&nbsp;Sleep&nbsp;can&nbsp;greatly&nbsp;affect&nbsp;(change)&nbsp;profiling&nbsp;result</span>
<br><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(!</span><span class="f_CodeExample" style="color: #0000ff;">IS_PROFILE_MODE</span><span class="f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Sleep</span><span class="f_CodeExample">(100);&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;disabling&nbsp;Sleep()&nbsp;call&nbsp;in&nbsp;the&nbsp;profiling&nbsp;mode</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Text"><span class="f_fortable">IS_PROFILE_MODE constant value is set by the compiler during the compilation, while it is set to zero in conventional mode. When launching a program in the profiling mode, a special compilation is performed and IS_PROFILE_MODE is replaced with a non-zero value.</span></p>
<p class="p_Text"><span class="f_Text">The IS_DEBUG_MODE constant can be useful when you need to slightly change the operation of a mql4 program in the debugging mode. For example, in debug mode you may need to display additional debugging information in the terminal log or create additional graphical objects in a chart. </span></p>
<p class="p_Text"><span class="f_Text">The following example creates a Label object and sets its description and color depending on the script running mode. In order to run a script in the debug mode from MetaEditor, press </span><span class="f_Text" style="font-weight: bold;">F5</span><span class="f_Text">. If you run the script from the browser window in the terminal, then the color and text of the object Label will be different.</span></p>
<p class="p_Text"><span class="f_Text" style="font-weight: bold;">Example:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check_DEBUG_MODE.mq5&nbsp;|</span>
<br><span class="f_CodeExample" style="color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;&copy;&nbsp;2009,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp.&nbsp;|</span>
<br><span class="f_CodeExample" style="color: #808080;">//|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.metaquotes.net&nbsp;|</span>
<br><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #0000ff;">#property</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">copyright</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;Copyright&nbsp;&copy;&nbsp;2009,&nbsp;MetaQuotes&nbsp;Software&nbsp;Corp.&quot;</span>
<br><span class="f_CodeExample" style="color: #0000ff;">#property</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">link</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;https://www.metaquotes.net&quot;</span>
<br><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #808080;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span>
<br><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #0000ff;">void</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">OnStart</span><span class="f_CodeExample">()</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample" style="color: #808080;">//---</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;label_name=</span><span class="f_CodeExample" style="color: #008080;">&quot;invisible_label&quot;</span><span class="f_CodeExample">;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ObjectFind</span><span class="f_CodeExample">(0,label_name)&lt;0)</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Object&quot;</span><span class="f_CodeExample">,label_name,</span><span class="f_CodeExample" style="color: #008080;">&quot;not&nbsp;found.&nbsp;Error&nbsp;code&nbsp;=&nbsp;&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">GetLastError</span><span class="f_CodeExample">());</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//---&nbsp;create&nbsp;Label</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ObjectCreate</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJ_LABEL</span><span class="f_CodeExample">,0,0,0);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//---&nbsp;set&nbsp;X&nbsp;coordinate</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ObjectSetInteger</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_XDISTANCE</span><span class="f_CodeExample">,200);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//---&nbsp;set&nbsp;Y&nbsp;coordinate</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ObjectSetInteger</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_YDISTANCE</span><span class="f_CodeExample">,300);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ResetLastError</span><span class="f_CodeExample">();</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">IS_DEBUG_MODE</span><span class="f_CodeExample">)&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;debug&nbsp;mode</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//---&nbsp;show&nbsp;message&nbsp;about&nbsp;the&nbsp;script&nbsp;execution&nbsp;mode</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ObjectSetString</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_TEXT</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #008080;">&quot;DEBUG&nbsp;MODE&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//---&nbsp;set&nbsp;text&nbsp;color&nbsp;to&nbsp;red</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(!</span><span class="f_CodeExample" style="color: #0000ff;">ObjectSetInteger</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_COLOR</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">clrRed</span><span class="f_CodeExample">))</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Unable&nbsp;to&nbsp;set&nbsp;the&nbsp;color.&nbsp;Error&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">GetLastError</span><span class="f_CodeExample">());</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">else</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;operation&nbsp;mode</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ObjectSetString</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_TEXT</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #008080;">&quot;RELEASE&nbsp;MODE&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//---&nbsp;set&nbsp;text&nbsp;color&nbsp;to&nbsp;invisible</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(!</span><span class="f_CodeExample" style="color: #0000ff;">ObjectSetInteger</span><span class="f_CodeExample">(0,label_name,</span><span class="f_CodeExample" style="color: #0000ff;">OBJPROP_COLOR</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">CLR_NONE</span><span class="f_CodeExample">))</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Unable&nbsp;to&nbsp;set&nbsp;the&nbsp;color.&nbsp;Error&nbsp;&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">GetLastError</span><span class="f_CodeExample">());</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ChartRedraw</span><span class="f_CodeExample">();</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">DebugBreak</span><span class="f_CodeExample">();&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;here&nbsp;termination&nbsp;will&nbsp;occur,&nbsp;if&nbsp;we&nbsp;are&nbsp;in&nbsp;debug&nbsp;mode</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;}</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">&nbsp;</span></p>
<p class="p_H1"><span class="f_H1">Crypt Methods</span></p>
<p class="p_Text"><span class="f_fortable">The ENUM_CRYPT_METHOD enumeration is used to specify the data transformation method, used in  <a href="cryptencode.htm" class="topiclink">CryptEncode()</a> and <a href="cryptdecode.htm" class="topiclink">CryptDecode()</a> functions.</span></p>
<p class="p_Text"><a name="enum_crypt_method" class="hmanchor"></a><span class="f_Text" style="font-weight: bold;">ENUM_CRYPT_METHOD</span></p>
<div style="text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table class="EnumTable" cellspacing="0" cellpadding="5" border="1" style="border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Constant</span></p>
</td>
<td style="vertical-align:top; width:50%; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Description</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_BASE64</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">BASE64</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_AES128</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">AES encryption with 128 bit key (16 bytes)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_AES256</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">AES encryption with 256 bit key (32 bytes)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_DES</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">DES encryption with 56 bit key (7 bytes)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; height:18px; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_HASH_SHA1</span></p>
</td>
<td style="vertical-align:top; width:50%; height:18px; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">SHA1 HASH calculation</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_HASH_SHA256</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">SHA256 HASH calculation</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_HASH_MD5</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">MD5 HASH calculation</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:15%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumID"><span class="f_EnumID">CRYPT_ARCH_ZIP</span></p>
</td>
<td style="vertical-align:top; width:50%; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumDesc"><span class="f_EnumDesc">ZIP archives</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span></p>
<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="debugbreak.htm" class="topiclink">DebugBreak()</a>, <a href="mql4_programm_info.htm" class="topiclink">Executed MQL4 program properties</a>, <a href="cryptencode.htm" class="topiclink">CryptEncode()</a>, <a href="cryptdecode.htm" class="topiclink">CryptDecode()</a></span></p>

<br>
</div>
</body>
</html>
