<!DOCTYPE html>
<html>
  <head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <title>StringFormat</title>
  <meta name="keywords" content="StringFormat" />
  <link type="text/css" href="default.css" rel="stylesheet" />






</head>

<body style="background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;">



<table width="100%" border="0" cellpadding="0" cellspacing="0" style="margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
  <tr>
    <td valign="middle">
      <table style="margin: 10px 0" width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr valign="middle">
          <td class="nav">
<a class="h_m" href="index.htm">          MQL4/5 Reference </a> / <a class="h_m" href="convert.htm"> Conversion Functions </a>/ StringFormat
          </td>
          <td align="right" style="white-space: nowrap; padding: 0 10px;">
          <a href="stringtotime.htm"><img style="vertical-align:middle;" src="previous.png" alt="?????" width="27" height="27" border=0></a><!--
       --><a href="chartostr.htm"><img style="vertical-align:middle;margin-left: 7px;" src="next.png" alt="??????" width="27" height="27" border="0"></a>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>



<div id="help">
<p class="p_H1"><span class="f_H1">StringFormat</span></p>
<p class="p_Function"><span class="f_Function">The function formats obtained parameters and returns a string.</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_Keywords">string&nbsp;&nbsp;</span><span class="f_Functions">StringFormat</span><span class="f_CodeExample">(</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">string</span><span class="f_CodeExample">&nbsp;&nbsp;</span><span class="f_Param">format</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;string&nbsp;with&nbsp;format&nbsp;description</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">...</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">...</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;parameters</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">Parameters</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">format</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;String containing method of formatting. Formatting rules are the same as for the <a href="printformat.htm" class="topiclink">PrintFormat</a> function.</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">...</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;Parameters, separated by a comma.</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">Return Value</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">String.</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">Example:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #0000ff;">void</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">OnStart</span><span class="f_CodeExample">()</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;</span><span class="f_CodeExample">{</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;string&nbsp;variables</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">output_string;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">temp_string;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">format_string;</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;prepare&nbsp;the&nbsp;specification&nbsp;header</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Contract&nbsp;specification&nbsp;for&nbsp;%s:\r\n&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;int&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">digits</span><span class="f_CodeExample">=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_DIGITS</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_DIGITS&nbsp;=&nbsp;%d&nbsp;(number&nbsp;of&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">digits);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;variable&nbsp;number&nbsp;of&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">point_value=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_POINT</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">format_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_POINT&nbsp;=&nbsp;%%.%df&nbsp;(point&nbsp;value)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">digits);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(format_string,point_value);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;int&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">spread=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_SPREAD</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_SPREAD&nbsp;=&nbsp;%d&nbsp;(current&nbsp;spread&nbsp;in&nbsp;points)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">spread);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;int&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">min_stop=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_STOPS_LEVEL</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_STOPS_LEVEL&nbsp;=&nbsp;%d&nbsp;(minimal&nbsp;indention&nbsp;in&nbsp;points&nbsp;for&nbsp;Stop&nbsp;orders)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">min_stop);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;without&nbsp;the&nbsp;fractional&nbsp;part</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">contract_size=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_CONTRACT_SIZE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_CONTRACT_SIZE&nbsp;=&nbsp;%.f&nbsp;(contract&nbsp;size)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">contract_size);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;default&nbsp;accuracy</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">tick_size=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_TICK_SIZE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_TICK_SIZE&nbsp;=&nbsp;%f&nbsp;(minimal&nbsp;price&nbsp;change)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">tick_size);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;determining&nbsp;the&nbsp;swap&nbsp;calculation&nbsp;mode</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">swap_mode=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_SWAP_MODE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_swap_mode;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">switch</span><span class="f_CodeExample">(swap_mode)</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">{</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">0:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_swap_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;0&nbsp;(in&nbsp;points)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">1:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_swap_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;1&nbsp;(in&nbsp;symbol&nbsp;base&nbsp;currency)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">2:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_swap_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;2&nbsp;(by&nbsp;interest)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">3:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_swap_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;3&nbsp;(in&nbsp;margin&nbsp;currency)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">}</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;string&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_SWAP_MODE&nbsp;=&nbsp;%s\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">str_swap_mode);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;default&nbsp;accuracy</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">swap_long=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_SWAP_LONG</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_SWAP_LONG&nbsp;=&nbsp;%f&nbsp;(buy&nbsp;order&nbsp;swap&nbsp;value)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">swap_long);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;default&nbsp;accuracy</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">swap_short=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_SWAP_SHORT</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_SWAP_SHORT&nbsp;=&nbsp;%f&nbsp;(sell&nbsp;order&nbsp;swap&nbsp;value)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">swap_short);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;determining&nbsp;the&nbsp;trading&nbsp;mode</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">trade_mode=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_MODE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_trade_mode;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">switch</span><span class="f_CodeExample">(trade_mode)</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">{</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_MODE_DISABLED</span><span class="f_CodeExample">:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_trade_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;SYMBOL_TRADE_MODE_DISABLED&nbsp;(trade&nbsp;is&nbsp;disabled&nbsp;for&nbsp;the&nbsp;symbol)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_MODE_LONGONLY</span><span class="f_CodeExample">:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_trade_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;SYMBOL_TRADE_MODE_LONGONLY&nbsp;(only&nbsp;long&nbsp;positions&nbsp;are&nbsp;allowed)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_MODE_SHORTONLY</span><span class="f_CodeExample">:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_trade_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;SYMBOL_TRADE_MODE_SHORTONLY&nbsp;(only&nbsp;short&nbsp;positions&nbsp;are&nbsp;allowed)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_MODE_CLOSEONLY</span><span class="f_CodeExample">:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_trade_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;SYMBOL_TRADE_MODE_CLOSEONLY&nbsp;(only&nbsp;position&nbsp;close&nbsp;operations&nbsp;are&nbsp;allowed)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_MODE_FULL</span><span class="f_CodeExample">:</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_trade_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;SYMBOL_TRADE_MODE_FULL&nbsp;(no&nbsp;trade&nbsp;restrictions)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">}</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;string&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_MODE&nbsp;=&nbsp;%s\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">str_trade_mode);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;in&nbsp;a&nbsp;compact&nbsp;format</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">volume_min=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_VOLUME_MIN</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_VOLUME_MIN&nbsp;=&nbsp;%g&nbsp;(minimal&nbsp;volume&nbsp;for&nbsp;a&nbsp;deal)\r\n&quot;</span><span class="f_CodeExample">,volume_min);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;in&nbsp;a&nbsp;compact&nbsp;format</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">volume_step=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_VOLUME_STEP</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_VOLUME_STEP&nbsp;=&nbsp;%g&nbsp;(minimal&nbsp;volume&nbsp;change&nbsp;step)\r\n&quot;</span><span class="f_CodeExample">,volume_step);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;in&nbsp;a&nbsp;compact&nbsp;format</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">volume_max=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_VOLUME_MAX</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_VOLUME_MAX&nbsp;=&nbsp;%g&nbsp;(maximal&nbsp;volume&nbsp;for&nbsp;a&nbsp;deal)\r\n&quot;</span><span class="f_CodeExample">,volume_max);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;determining&nbsp;the&nbsp;contract&nbsp;price&nbsp;calculation&nbsp;mode</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">calc_mode=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_CALC_MODE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">str_calc_mode;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">switch</span><span class="f_CodeExample">(calc_mode)</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">{</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">0:str_calc_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;0&nbsp;(Forex)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">1:str_calc_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;1&nbsp;(CFD)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">2:str_calc_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;2&nbsp;(futures)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">case</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">3:str_calc_mode=</span><span class="f_CodeExample" style="color: #008080;">&quot;3&nbsp;(CFD&nbsp;for&nbsp;indices)&quot;</span><span class="f_CodeExample">;</span><span class="f_CodeExample" style="color: #0000ff;">break</span><span class="f_CodeExample">;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">}</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;string&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_CALC_MODE&nbsp;=&nbsp;%s\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">str_calc_mode);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;2&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">margin_initial=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_MARGIN_INITIAL</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_MARGIN_INITIAL&nbsp;=&nbsp;%.2f&nbsp;(initial&nbsp;margin)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">margin_initial);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;2&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">margin_maintenance=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_MARGIN_MAINTENANCE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_MARGIN_MAINTENANCE&nbsp;=&nbsp;%.2f&nbsp;(maintenance&nbsp;margin)\r\n&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">margin_maintenance);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;int&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">freeze_level=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_TRADE_FREEZE_LEVEL</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">temp_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_FREEZE_LEVEL&nbsp;=&nbsp;%d&nbsp;(order&nbsp;freeze&nbsp;level&nbsp;in&nbsp;points)&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">freeze_level);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">StringAdd</span><span class="f_CodeExample">(output_string,temp_string);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(output_string);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Comment</span><span class="f_CodeExample">(output_string);</span><br>
<span class="f_CodeExample" style="color: #808080;">/*&nbsp;execution&nbsp;result</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;Contract&nbsp;specification&nbsp;for&nbsp;EURJPY:</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_DIGITS&nbsp;=&nbsp;3&nbsp;(number&nbsp;of&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_POINT&nbsp;=&nbsp;0.001&nbsp;(point&nbsp;value)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_SPREAD&nbsp;=&nbsp;23&nbsp;(current&nbsp;spread&nbsp;in&nbsp;points)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_STOPS_LEVEL&nbsp;=&nbsp;100&nbsp;(minimal&nbsp;indention&nbsp;in&nbsp;points&nbsp;for&nbsp;Stop&nbsp;orders)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_CONTRACT_SIZE&nbsp;=&nbsp;100000&nbsp;(contract&nbsp;size)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_TICK_SIZE&nbsp;=&nbsp;0.001000&nbsp;(minimal&nbsp;price&nbsp;change)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_SWAP_MODE&nbsp;=&nbsp;0&nbsp;(in&nbsp;points)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_SWAP_LONG&nbsp;=&nbsp;-1.600000&nbsp;(buy&nbsp;order&nbsp;swap&nbsp;value)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_SWAP_SHORT&nbsp;=&nbsp;-1.100000&nbsp;(sell&nbsp;order&nbsp;swap&nbsp;value)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_MODE&nbsp;=&nbsp;SYMBOL_TRADE_MODE_FULL&nbsp;(no&nbsp;trade&nbsp;restrictions)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_VOLUME_MIN&nbsp;=&nbsp;0.01&nbsp;(minimal&nbsp;volume&nbsp;for&nbsp;a&nbsp;deal)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_VOLUME_STEP&nbsp;=&nbsp;0.01&nbsp;(minimal&nbsp;volume&nbsp;change&nbsp;step)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_VOLUME_MAX&nbsp;=&nbsp;1000&nbsp;(maximal&nbsp;volume&nbsp;for&nbsp;a&nbsp;deal)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_CALC_MODE&nbsp;=&nbsp;0&nbsp;(Forex)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_MARGIN_INITIAL&nbsp;=&nbsp;0.00&nbsp;(initial&nbsp;margin)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_MARGIN_MAINTENANCE&nbsp;=&nbsp;0.00&nbsp;(maintenance&nbsp;margin)</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SYMBOL_TRADE_FREEZE_LEVEL&nbsp;=&nbsp;20&nbsp;(order&nbsp;freeze&nbsp;level&nbsp;in&nbsp;points)</span><br>
<span class="f_CodeExample" style="color: #808080;">*/</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;</span><span class="f_CodeExample">}</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span></p>
<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="printformat.htm" class="topiclink">PrintFormat</a>, <a href="doubletostring.htm" class="topiclink">DoubleToString</a>,<a href="colortostring.htm" class="topiclink">ColorToString</a>, <a href="timetostring.htm" class="topiclink">TimeToString</a></span></p>

<br>
</div>
</body>
</html>
