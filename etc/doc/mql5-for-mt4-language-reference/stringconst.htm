<!DOCTYPE html>
<html>
  <head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <title>String Type</title>
  <meta name="keywords" content="string" />
  <link type="text/css" href="default.css" rel="stylesheet" />






</head>

<body style="background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;">



<table width="100%" border="0" cellpadding="0" cellspacing="0" style="margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
  <tr>
    <td valign="middle">
      <table style="margin: 10px 0" width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr valign="middle">
          <td class="nav">
<a class="h_m" href="index.htm">          MQL4/5 Reference </a> / <a class="h_m" href="basis.htm"> Language Basics </a> / <a class="h_m" href="types.htm"> Data Types </a>/ String Type
          </td>
          <td align="right" style="white-space: nowrap; padding: 0 10px;">
          <a href="double.htm"><img style="vertical-align:middle;" src="previous.png" alt="?????" width="27" height="27" border=0></a><!--
       --><a href="classes.htm"><img style="vertical-align:middle;margin-left: 7px;" src="next.png" alt="??????" width="27" height="27" border="0"></a>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>



<div id="help">
<p class="p_H1"><span class="f_H1">String Type</span></p>
<p class="p_Text"><span class="f_Text">The string type is used for storing text strings. A text string is a sequence of characters in the Unicode format with the final zero at the end of it. A string constant can be assigned to a string variable. A string constant is a sequence of Unicode characters enclosed in double quotes: &quot;This is a string constant&quot;.</span></p>
<p class="p_Text"><span class="f_Text">If you need to include a double quote (&quot;) into a string, the backslash character (\) must be put before it. Any special <a href="symbolconstants.htm" class="topiclink">character constants</a> can be written in a string, if the backslash character (\) is typed before them.</span></p>
<p class="p_Text"><span class="f_Text" style="font-weight: bold;">Examples:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;svar=</span><span class="f_CodeExample" style="color: #008080;">&quot;This&nbsp;is&nbsp;a&nbsp;character&nbsp;string&quot;</span><span class="f_CodeExample">;</span>
<br><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;svar2=</span><span class="f_CodeExample" style="color: #0000ff;">StringSubstr</span><span class="f_CodeExample">(svar,0,4);</span>
<br><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Copyright&nbsp;symbol\t\x00A9&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample" style="color: #0000ff;">FileWrite</span><span class="f_CodeExample">(handle,</span><span class="f_CodeExample" style="color: #008080;">&quot;This&nbsp;string&nbsp;contains&nbsp;a&nbsp;new&nbsp;line&nbsp;symbols&nbsp;\n&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;MT4path=</span><span class="f_CodeExample" style="color: #008080;">&quot;C:\\Program&nbsp;Files\\MetaTrader&nbsp;4&quot;</span><span class="f_CodeExample">;</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Text"><span class="f_Text">To make the source code readable, long constant strings can be split into parts without addition operation. During compilation, these parts will be combined into one long string:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #808080;">//---&nbsp;Declare&nbsp;a&nbsp;long&nbsp;constant&nbsp;string</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;HTML_head=</span><span class="f_CodeExample" style="color: #008080;">&quot;&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;\&quot;-//W3C//DTD&nbsp;XHTML&nbsp;1.0&nbsp;Transitional//EN\&quot;&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;&nbsp;\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\&quot;&gt;\n&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;&lt;html&nbsp;xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot;&gt;\n&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;&lt;head&gt;\n&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;&lt;meta&nbsp;http-equiv=\&quot;Content-Type\&quot;&nbsp;content=\&quot;text/html;&nbsp;charset=utf-8\&quot;&nbsp;/&gt;\n&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;&lt;title&gt;Trade&nbsp;Operations&nbsp;Report&lt;/title&gt;\n&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #008080;">&quot;&lt;/head&gt;&quot;</span><span class="f_CodeExample">;</span>
<br><span class="f_CodeExample" style="color: #808080;">//---&nbsp;Output&nbsp;the&nbsp;constant&nbsp;string&nbsp;into&nbsp;log</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(HTML_head);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;}</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Text"><span class="f_Text">Internal representation of the string type is a structure of 12 bytes long:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #008080;">#pragma&nbsp;pack(push,1)</span>
<br><span class="f_CodeExample" style="color: #0000ff;">struct</span><span class="f_CodeExample">&nbsp;MqlString</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;32-bit&nbsp;integer,&nbsp;contains&nbsp;size&nbsp;of&nbsp;the&nbsp;buffer,&nbsp;allocated&nbsp;for&nbsp;the&nbsp;string.</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;LPWSTR&nbsp;&nbsp;&nbsp;buffer;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;32-bit&nbsp;address&nbsp;of&nbsp;the&nbsp;buffer,&nbsp;containing&nbsp;the&nbsp;string.</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reserved;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #808080;">//&nbsp;32-bit&nbsp;integer,&nbsp;reserved.</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;};</span>
<br><span class="f_CodeExample" style="color: #008080;">#pragma&nbsp;pack(pop,1)</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span></p>
<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="convert.htm" class="topiclink">Conversion Functions</a>, <a href="strings.htm" class="topiclink">String Functions</a>,  <a href="fileopen.htm" class="topiclink">FileOpen()</a>, <a href="filereadstring.htm" class="topiclink">FileReadString()</a>, <a href="filewritestring.htm" class="topiclink">FileWriteString()</a></span></p>

<br>
</div>
</body>
</html>
