<!DOCTYPE html>
<html>
  <head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <title>FileOpen</title>
  <meta name="keywords" content="FileOpen" />
  <link type="text/css" href="default.css" rel="stylesheet" />






</head>

<body style="background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;">



<table width="100%" border="0" cellpadding="0" cellspacing="0" style="margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
  <tr>
    <td valign="middle">
      <table style="margin: 10px 0" width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr valign="middle">
          <td class="nav">
<a class="h_m" href="index.htm">          MQL4/5 Reference </a> / <a class="h_m" href="files.htm"> File Functions </a>/ FileOpen
          </td>
          <td align="right" style="white-space: nowrap; padding: 0 10px;">
          <a href="fileisexist.htm"><img style="vertical-align:middle;" src="previous.png" alt="?????" width="27" height="27" border=0></a><!--
       --><a href="fileclose.htm"><img style="vertical-align:middle;margin-left: 7px;" src="next.png" alt="??????" width="27" height="27" border="0"></a>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>



<div id="help">
<p class="p_H1"><span class="f_H1">FileOpen</span></p>
<p class="p_Function"><span class="f_Function">The function opens the file with the specified name and flag.</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_Keywords">int&nbsp;&nbsp;</span><span class="f_Functions">FileOpen</span><span class="f_CodeExample">(</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">string</span><span class="f_CodeExample">&nbsp;&nbsp;</span><span class="f_Param">file_name</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;File&nbsp;name</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">int</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">open_flags</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;Combination&nbsp;of&nbsp;flags</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">short</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Param">delimiter=&#39;;&#39;</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;Delimiter</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">uint</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Param">codepage=CP_ACP</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;Code&nbsp;page</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">Parameters</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">file_name</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;The name of the file can contain subfolders. If the file is opened for writing, these subfolders will be created if there are no such ones.</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">open_flags</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] <a href="fileflags.htm" class="topiclink"> combination of flags</a> determining the operation mode for the file. The flags are defined as follows:</span><br>
<span class="f_ParameterDesrciption">FILE_READ file is opened for reading</span><br>
<span class="f_ParameterDesrciption">FILE_WRITE file is opened for writing</span><br>
<span class="f_ParameterDesrciption">FILE_BIN binary read-write mode (no conversion from a string and to a string)</span><br>
<span class="f_ParameterDesrciption">FILE_CSV file of csv type (all recorded items are converted to the strings of unicode or ansi type, and are separated by a delimiter)</span><br>
<span class="f_ParameterDesrciption">FILE_TXT a simple text file (the same as csv, but the delimiter is not taken into account)</span><br>
<span class="f_ParameterDesrciption">FILE_ANSI lines of ANSI type (single-byte symbols) </span><br>
<span class="f_ParameterDesrciption">FILE_UNICODE lines of UNICODE type (double-byte characters)</span><br>
<span class="f_ParameterDesrciption">FILE_SHARE_READ shared reading from several programs</span><br>
<span class="f_ParameterDesrciption">FILE_SHARE_WRITE shared writing from several programs</span><br>
<span class="f_ParameterDesrciption">FILE_COMMON location of the file in a shared folder for all client terminals \Terminal\Common\Files</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">delimiter=&#39;;&#39;</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;value to be used as a separator in txt or csv-file. If the csv-file delimiter is not specified, the default delimiter is &quot;;&quot;. If the txt-file delimiter is not specified, then no separator is used. If the separator is clearly set to 0, then no separator is used.</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">codepage=CP_ACP</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;Optional parameter. The value of the code page. For the most-used <a href="codepageusage.htm" class="topiclink">code pages</a> provide appropriate constants.</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">Return Value</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">If a file has been opened successfully, the function returns the file handle, which is then used to access the file data. In case of failure returns <a href="otherconstants.htm" class="topiclink">INVALID_HANDLE</a>.</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">Note</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">For security reasons, work with files is strictly controlled in the <MQL4/5 language>. Files with which file operations are conducted using MQL4 means, cannot be outside the file sandbox.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">The file is opened in the folder of the client terminal in the subfolder MQL4\files (or Tester\Files in case of testing). If FILE_COMMON is specified among flags, the file is opened in a shared folder for all MetaTrader 4 client terminals.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">&quot;Named pipes&quot; can be opened according to the following rules:</span></p>
<ul style="text-indent:0px; padding-left:0; margin-top:0; margin-bottom:0; margin-left: 43px;list-style-position:outside; list-style-type:disc">
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 1px; margin-right: 17px; margin-bottom: 1px;"><span class="f_FunctionRemLI">Pipe name is a string, which should have the following look: &quot;\\servername\pipe\pipename&quot;, where servername - server name in the network, while pipename is a pipe name. If the pipes are used on the same computer, the server name can be omitted but a point should be inserted instead of it: &quot;\\.\pipe\pipename&quot;. A client trying to connect the pipe should know its name.</span></li>
<li style="text-align: justify; padding: 0px 0px 0px 0px; margin-top: 1px; margin-right: 17px; margin-bottom: 1px;"><span class="f_FunctionRemLI"><a href="fileflush.htm" class="topiclink">FileFlush()</a> and <a href="fileseek.htm" class="topiclink">FileSeek()</a> should be called to the beginning of a file between sequential operations of reading from the pipe and writing to it.</span></li>
</ul>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">A special symbol &#39;\&#39; is used in shown strings. Therefore, &#39;\&#39; should be doubled when writing a name in MQL4 application. It means that the above example should have the following look in the code: &quot;\\\\servername\\pipe\\pipename&quot;.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">More information about working with named pipes can be found in the article &quot;<a href="https://www.mql5.com/en/articles/503" target="_blank" class="weblink">Communicating With MetaTrader 5 Using Named Pipes Without Using DLLs</a>&quot;.</span></p>
<p class="p_Text"><span class="f_Text" style="font-weight: bold;">Example:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #808080;">//|&nbsp;Script&nbsp;program&nbsp;start&nbsp;function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span>
<br><span class="f_CodeExample" style="color: #808080;">//+------------------------------------------------------------------+</span>
<br><span class="f_CodeExample" style="color: #0000ff;">void</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">OnStart</span><span class="f_CodeExample">()</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample" style="color: #808080;">//---&nbsp;incorrect&nbsp;file&nbsp;opening&nbsp;method</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">terminal_data_path</span><span class="f_CodeExample">=</span><span class="f_CodeExample" style="color: #0000ff;">TerminalInfoString</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">TERMINAL_DATA_PATH</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;filename=</span><span class="f_CodeExample" style="color: #0000ff;">terminal_data_path</span><span class="f_CodeExample">+</span><span class="f_CodeExample" style="color: #008080;">&quot;\\MQL4\\Files\\&quot;</span><span class="f_CodeExample">+</span><span class="f_CodeExample" style="color: #008080;">&quot;fractals.csv&quot;</span><span class="f_CodeExample">;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">&nbsp;filehandle=</span><span class="f_CodeExample" style="color: #0000ff;">FileOpen</span><span class="f_CodeExample">(filename,</span><span class="f_CodeExample" style="color: #0000ff;">FILE_WRITE</span><span class="f_CodeExample">|</span><span class="f_CodeExample" style="color: #0000ff;">FILE_CSV</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(filehandle&lt;0)</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Failed&nbsp;to&nbsp;open&nbsp;the&nbsp;file&nbsp;by&nbsp;the&nbsp;absolute&nbsp;path&nbsp;&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Error&nbsp;code&nbsp;&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">GetLastError</span><span class="f_CodeExample">());</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample" style="color: #808080;">//---&nbsp;correct&nbsp;way&nbsp;of&nbsp;working&nbsp;in&nbsp;the&nbsp;&quot;file&nbsp;sandbox&quot;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">ResetLastError</span><span class="f_CodeExample">();</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;filehandle=</span><span class="f_CodeExample" style="color: #0000ff;">FileOpen</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;fractals.csv&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">FILE_WRITE</span><span class="f_CodeExample">|</span><span class="f_CodeExample" style="color: #0000ff;">FILE_CSV</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(filehandle!=</span><span class="f_CodeExample" style="color: #0000ff;">INVALID_HANDLE</span><span class="f_CodeExample">)</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">FileWrite</span><span class="f_CodeExample">(filehandle,</span><span class="f_CodeExample" style="color: #0000ff;">TimeCurrent</span><span class="f_CodeExample">(),</span><span class="f_CodeExample" style="color: #0000ff;">Symbol</span><span class="f_CodeExample">(),&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">EnumToString</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ENUM_TIMEFRAMES</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #ff00ff;">_Period</span><span class="f_CodeExample">)));</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">FileClose</span><span class="f_CodeExample">(filehandle);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;FileOpen&nbsp;OK&quot;</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">else</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Operation&nbsp;FileOpen&nbsp;failed,&nbsp;error&nbsp;&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">GetLastError</span><span class="f_CodeExample">());</span>
<br><span class="f_CodeExample" style="color: #808080;">//---&nbsp;another&nbsp;example&nbsp;with&nbsp;the&nbsp;creation&nbsp;of&nbsp;an&nbsp;enclosed&nbsp;directory&nbsp;in&nbsp;MQL4\Files\</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample">&nbsp;subfolder=</span><span class="f_CodeExample" style="color: #008080;">&quot;Research&quot;</span><span class="f_CodeExample">;</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;filehandle=</span><span class="f_CodeExample" style="color: #0000ff;">FileOpen</span><span class="f_CodeExample">(subfolder+</span><span class="f_CodeExample" style="color: #008080;">&quot;\\fractals.txt&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">FILE_WRITE</span><span class="f_CodeExample">|</span><span class="f_CodeExample" style="color: #0000ff;">FILE_CSV</span><span class="f_CodeExample">);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">if</span><span class="f_CodeExample">(filehandle!=</span><span class="f_CodeExample" style="color: #0000ff;">INVALID_HANDLE</span><span class="f_CodeExample">)</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">FileWrite</span><span class="f_CodeExample">(filehandle,</span><span class="f_CodeExample" style="color: #0000ff;">TimeCurrent</span><span class="f_CodeExample">(),</span><span class="f_CodeExample" style="color: #0000ff;">Symbol</span><span class="f_CodeExample">(),&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">EnumToString</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ENUM_TIMEFRAMES</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #ff00ff;">_Period</span><span class="f_CodeExample">)));</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">FileClose</span><span class="f_CodeExample">(filehandle);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;The&nbsp;file&nbsp;most&nbsp;be&nbsp;created&nbsp;in&nbsp;the&nbsp;folder&nbsp;&quot;</span><span class="f_CodeExample">+</span><span class="f_CodeExample" style="color: #0000ff;">terminal_data_path</span><span class="f_CodeExample">+</span><span class="f_CodeExample" style="color: #008080;">&quot;\\&quot;</span><span class="f_CodeExample">+subfolder);</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">else</span><span class="f_CodeExample">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;File&nbsp;open&nbsp;failed,&nbsp;error&nbsp;&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">GetLastError</span><span class="f_CodeExample">());</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;}</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span></p>
<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="codepageusage.htm" class="topiclink">Use of a Codepage</a>, <a href="filefindfirst.htm" class="topiclink">FileFindFirst()</a>, <a href="foldercreate.htm" class="topiclink">FolderCreate()</a>, <a href="fileflags.htm" class="topiclink">File opening flags</a></span></p>

<br>
</div>
</body>
</html>
