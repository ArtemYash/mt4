<!DOCTYPE html>
<html>
  <head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <title>PrintFormat</title>
  <meta name="keywords" content="printf,PrintFormat" />
  <link type="text/css" href="default.css" rel="stylesheet" />






</head>

<body style="background-color:#FFFFFF; font-family:'Trebuchet MS',Tahoma,Arial,Helvetica,sans-serif; margin:0px;">



<table width="100%" border="0" cellpadding="0" cellspacing="0" style="margin:0; background: #7F90A5 url('gradient_header.png') repeat-x left top; border-bottom: 3px solid #DBE0E5;">
  <tr>
    <td valign="middle">
      <table style="margin: 10px 0" width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr valign="middle">
          <td class="nav">
<a class="h_m" href="index.htm">          MQL4/5 Reference </a> / <a class="h_m" href="common.htm"> Common Functions </a>/ PrintFormat
          </td>
          <td align="right" style="white-space: nowrap; padding: 0 10px;">
          <a href="print.htm"><img style="vertical-align:middle;" src="previous.png" alt="?????" width="27" height="27" border=0></a><!--
       --><a href="resetlasterror.htm"><img style="vertical-align:middle;margin-left: 7px;" src="next.png" alt="??????" width="27" height="27" border="0"></a>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>



<div id="help">
<p class="p_H1"><span class="f_H1">PrintFormat</span></p>
<p class="p_Function"><span class="f_Function">It formats and enters sets of symbols and values in the Expert Advisor log in accordance with a preset format.</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_Keywords">void&nbsp;&nbsp;</span><span class="f_Functions">PrintFormat</span><span class="f_CodeExample">(</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;</span><span class="f_Keywords">string</span><span class="f_CodeExample">&nbsp;</span><span class="f_Param">format_string</span><span class="f_CodeExample">,&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;format&nbsp;string</span>
<br><span class="f_Param">&nbsp;&nbsp;&nbsp;...</span><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_Comments">//&nbsp;values&nbsp;of&nbsp;simple&nbsp;types</span>
<br><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;);</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BoldTitles"><span class="f_BoldTitles">Parameters</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">format_string</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;A format string consists of simple symbols, and if the format string is followed by arguments, it also contains format specifications.</span></p>
<p class="p_FunctionParameter"><span class="f_FunctionParameter">...</span></p>
<p class="p_ParameterDesrciption"><span class="f_ParameterDesrciption">[in] &nbsp;Any values of simple types separated by commas. Total number of parameters can&#39;t exceed 64 including the format string.</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">Return Value</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">String.</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">Note</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">PrintFormat() function does not work during optimization in the <a href="testing.htm#alert_etc" class="topiclink">Strategy Tester</a>.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">The number, order and type of parameters must exactly match the set of qualifiers, otherwise the print result is undefined. Instead of PrintFormat() you can use </span><span class="f_FunctionRemark" style="color: #0000ff;">printf</span><span class="f_FunctionRemark">().</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">If the format string is followed by parameters, this string must contain format specifications that denote output format of these parameters. Specification of format always starts with the percent sign (%). </span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">A format string is read from left to right. When the first format specification is met (if there is any), the value of the first parameter after the format string is transformed and output according to the preset specification. The second format specification calls transformation and output of the second parameter, and so on till the format string end.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">The format specification has the following form: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="f_FunctionRemark" style="font-weight: bold;"> %[flags][width][.precision][{h | l | ll | I32 | I64}]type</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">Each field of the format specification is either a simple symbol, or a number denoting a simple format option. The simplest format specification contains only the percent sign (%) and a symbol defining the <a href="printformat.htm#type" class="topiclink">type of the output parameter</a> (for example, %s). If you need to output the percent sign in the format string, use the format specification %%.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">&nbsp;</span></p>
<p class="p_H2"><span class="f_H2">flags</span></p>
<div style="text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 4px 30px;"><table class="EnumTable" cellspacing="0" cellpadding="5" border="1" style="border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Flag</span></p>
</td>
<td style="vertical-align:top; width:517px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Description</span></p>
</td>
<td style="vertical-align:top; width:305px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Default Behavior</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">– (minus)</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Left justification within the set width</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Right justification</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">+ (plus)</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Output of the + or - sign for values of sign types</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">The sign is shown only if the value is negative</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">0 (zero)</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Zeroes are added before an output value within the preset <a href="printformat.htm#width" class="topiclink">width</a>. If </span><span class="f_fortable" style="font-weight: bold;">0</span><span class="f_fortable"> flag is specified with an integer format (</span><span class="f_fortable" style="font-weight: bold;">i</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">u</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">x</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">X</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">o</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">d</span><span class="f_fortable">) and accuracy specification is set (for example, %04.d), then 0 is ignored.</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Nothing is added</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">space</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A space is shown before an output value, if it is a sign and positive value</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Spaces aren&#39;t inserted</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">#</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">If used together with the format </span><span class="f_fortable" style="font-weight: bold;">o</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">x</span><span class="f_fortable"> or </span><span class="f_fortable" style="font-weight: bold;">X</span><span class="f_fortable">, then before the output value 0, 0x or 0X is added respectively.</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Nothing is added</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">&nbsp;</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">If used together with the format </span><span class="f_fortable" style="font-weight: bold;">e</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">E</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">a</span><span class="f_fortable"> or </span><span class="f_fortable" style="font-weight: bold;">A</span><span class="f_fortable">, value is always shown with a decimal point.</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Decimal point is shown only if there is a non-zero fractional part.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">&nbsp;</span></p>
</td>
<td style="vertical-align:top; width:517px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">If used together with the format </span><span class="f_fortable" style="font-weight: bold;">g</span><span class="f_fortable"> or </span><span class="f_fortable" style="font-weight: bold;">G</span><span class="f_fortable">, flag defines presence of a decimal point in the output value and prevents the cutting off of leading zeroes. </span></p>
<p class="p_fortable"><span class="f_fortable">Flag # is ignored when used together with formats </span><span class="f_fortable" style="font-weight: bold;">c</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">d</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">i</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">u</span><span class="f_fortable">, </span><span class="f_fortable" style="font-weight: bold;">s</span><span class="f_fortable">.</span></p>
</td>
<td style="vertical-align:top; width:305px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Decimal point is shown only if there is a non-zero fractional part. Leading zeroes are cut off.</span></p>
</td>
</tr>
</table>
</div>
<p class="p_H2"><a name="width" class="hmanchor"></a><span class="f_H2">width</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">A non-negative decimal number that sets the minimal number of output symbols of the formatted value. If the number of output symbols is less than the specified width, the corresponding number of spaces is added from the left or right depending on the alignment (flag –). If there is flag zero (0), the corresponding number of zeroes is added before the output value. If the number of output symbols is greater than the specified width, the output value is never cut off.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">If an asterisk (*) is specified as width, value of int type must be indicated in the corresponding place of the list of passed parameters. It will be used for specifying width of the output value.</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">&nbsp;</span></p>
<p class="p_H2"><a name="precision" class="hmanchor"></a><span class="f_H2">precision</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">A non-negative decimal number that sets the output accuracy - number of digits after a decimal point. As distinct from width specification, accuracy specification can cut off the part of fractional type with or without rounding. </span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">The use of accuracy specification is different for different format <a href="printformat.htm#type" class="topiclink">types</a>.</span></p>
<div style="text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 4px 30px;"><table class="EnumTable" cellspacing="0" cellpadding="5" border="1" style="border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Types</span></p>
</td>
<td style="vertical-align:top; width:514px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Description</span></p>
</td>
<td style="vertical-align:top; width:308px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Default Behavior</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable" style="font-weight: bold;">a, A</span></p>
</td>
<td style="vertical-align:top; width:514px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Accuracy specification sets the number of digits after a decimal point.</span></p>
</td>
<td style="vertical-align:top; width:308px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Default accuracy – 6.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable" style="font-weight: bold;">c, C</span></p>
</td>
<td style="vertical-align:top; width:514px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Not used</span></p>
</td>
<td style="vertical-align:top; width:308px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">&nbsp;</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable" style="font-weight: bold;">d, i, u, o, x, X</span></p>
</td>
<td style="vertical-align:top; width:514px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Sets minimal number of output digits. If number of digits in a corresponding parameter is less than this accuracy, zeroes are added to the left of the output value. The output value isn&#39;t cut off, if the number of output digits is larger than the specified accuracy.</span></p>
</td>
<td style="vertical-align:top; width:308px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable"> Default accuracy – 1.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable" style="font-weight: bold;">e, E, f</span></p>
</td>
<td style="vertical-align:top; width:514px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Sets number of output digits after a decimal point. The last digit is rounded off.</span></p>
</td>
<td style="vertical-align:top; width:308px; padding:5px; border:solid thin #b1c2d6;"><p class="p_Normal"><span class="f_fortable">Default accuracy – 6. If set accuracy is 0 or decimal part is absent, the decimal point is not shown.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable" style="font-weight: bold;">g, G</span></p>
</td>
<td style="vertical-align:top; width:514px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Sets maximal number of meaningful numbers.</span></p>
</td>
<td style="vertical-align:top; width:308px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">6 meaningful numbers are output.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:80px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable" style="font-weight: bold;">s, S</span></p>
</td>
<td style="vertical-align:top; width:514px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Sets number of output symbols of a string. If the string length exceeds the accuracy, the string is cut off.</span></p>
</td>
<td style="vertical-align:top; width:308px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">The whole string is output.</span></p>
</td>
</tr>
</table>
</div>
<p class="p_H2"><span class="f_H2" style="font-size: 11pt;"> h | l | ll | I32 | I64</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">Specification of data sizes, passed as a parameter.</span></p>
<div style="text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 4px 30px;"><table class="EnumTable" cellspacing="0" cellpadding="5" border="1" style="border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Parameter Type</span></p>
</td>
<td style="vertical-align:top; width:161px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Used Prefix</span></p>
</td>
<td style="vertical-align:top; width:617px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Joint Specifier of Type</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">l (lower case L)</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">d, i, o, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">uint</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">l (lower case L)</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">o, u, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">long</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">ll (two lower case L)</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">d, i, o, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">short</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">h</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">d, i, o, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">ushort</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">h</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">o, u, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">I32</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">d, i, o, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">uint</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">I32</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">o, u, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">long</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">I64</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">d, i, o, x, or X</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:86px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">ulong</span></p>
</td>
<td style="vertical-align:top; width:161px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">I64</span></p>
</td>
<td style="vertical-align:top; width:617px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">o, u, x, or X</span></p>
</td>
</tr>
</table>
</div>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">&nbsp;</span></p>
<p class="p_H2"><a name="type" class="hmanchor"></a><span class="f_H2" style="font-size: 11pt;">type</span></p>
<p class="p_Text"><span class="f_Text">Type specifier is the only obligatory field for formatted output.</span></p>
<div style="text-align: justify; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 8px 17px 4px 30px;"><table class="EnumTable" cellspacing="0" cellpadding="5" border="1" style="border:solid 2px #b1c2d6; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Symbol</span></p>
</td>
<td style="vertical-align:top; width:68px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Type</span></p>
</td>
<td style="vertical-align:top; width:755px; background-color:#dbe9f9; padding:5px; border:solid thin #b1c2d6;"><p class="p_EnumHeader"><span class="f_EnumHeader">Output Format</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">c</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Symbol of short type (Unicode)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">C</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Symbol of char type (ANSI)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">d</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Signed decimal integer</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">i</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Signed decimal integer</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">o</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Unsigned octal integer</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">u</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Unsigned decimal integer</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">x</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Unsigned hexadecimal integer, using &quot;abcdef&quot;</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">X</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">int</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Unsigned hexadecimal integer, using &quot;ABCDEF&quot;</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">e</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A real value in the format [-] d.dddde[sign] ddd, where d - one decimal digit, dddd - one or more decimal digits, ddd - a three-digit number that determines the size of the exponent, sign - plus or minus</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">E</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">Similar to the format of e, except that the sign of exponent is output by upper case letter (</span><span class="f_fortable" style="font-weight: bold;">E</span><span class="f_fortable"> instead of e)</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">f</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A real value in the format [-] dddd.dddd, where dddd - one or more decimal digits. Number of displayed digits before the decimal point depends on the size of number value. Number of digits after the decimal point depends on the required accuracy.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">g</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A real value output in </span><span class="f_fortable" style="font-weight: bold;">f</span><span class="f_fortable"> or </span><span class="f_fortable" style="font-weight: bold;">e </span><span class="f_fortable">format depending on what output is more compact</span><span class="f_fortable">.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">G</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A real value output in </span><span class="f_fortable" style="font-weight: bold;">F</span><span class="f_fortable"> or </span><span class="f_fortable" style="font-weight: bold;">E </span><span class="f_fortable">format depending on what output is more compact</span><span class="f_fortable">.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">a</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A real number in format [&#8722;]0xh.hhhh </span><span class="f_fortable" style="font-weight: bold;">p</span><span class="f_fortable">&plusmn;dd, where h.hhhh – mantissa in the form of hexadecimal digits, using &quot;abcdef&quot;, dd - One or more digits of exponent. Number of decimal places is determined by the <a href="printformat.htm#precision" class="topiclink">accuracy specification</a></span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; height:40px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A</span></p>
</td>
<td style="vertical-align:top; width:68px; height:40px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">double</span></p>
</td>
<td style="vertical-align:top; width:755px; height:40px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">A real number in format [&#8722;]0xh.hhhh </span><span class="f_fortable" style="font-weight: bold;">P</span><span class="f_fortable">&plusmn;dd, where h.hhhh – mantissa in the form of hexadecimal digits, using &quot;ABCDEF&quot;, dd - One or more digits of exponent. Number of decimal places is determined by the <a href="printformat.htm#precision" class="topiclink">accuracy specification</a></span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:79px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">s</span></p>
</td>
<td style="vertical-align:top; width:68px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">string</span></p>
</td>
<td style="vertical-align:top; width:755px; padding:5px; border:solid thin #b1c2d6;"><p class="p_fortable"><span class="f_fortable">String output</span></p>
</td>
</tr>
</table>
</div>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">&nbsp;</span></p>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">Instead of PrintFormat() you can use </span><span class="f_FunctionRemark" style="color: #0000ff;">printf</span><span class="f_FunctionRemark">().</span></p>
<p class="p_Text"><span class="f_Text" style="font-weight: bold;">Example:</span></p>
<div style="text-align: left; text-indent: 0px; line-height: 1.0; page-break-inside: avoid; border-color: #b3b3b3; border-style: solid; border-width: thin; background: #fbf9f5; padding: 0px 0px 0px 0px; margin: 2px 17px 2px 17px;"><table cellspacing="0" cellpadding="3" border="0" style="text-align: justify;border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_CodeExample" style="page-break-inside: avoid;"><span class="f_CodeExample" style="color: #0000ff;">void</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">OnStart</span><span class="f_CodeExample">()</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;</span><span class="f_CodeExample">{</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;trade&nbsp;server&nbsp;name</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">server=</span><span class="f_CodeExample" style="color: #0000ff;">AccountInfoString</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ACCOUNT_SERVER</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;account&nbsp;number</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">login=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">AccountInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ACCOUNT_LOGIN</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;long&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">long</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">leverage=</span><span class="f_CodeExample" style="color: #0000ff;">AccountInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ACCOUNT_LEVERAGE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;%s&nbsp;%d:&nbsp;leverage&nbsp;=&nbsp;1:%I64d&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">server,login,leverage);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;account&nbsp;currency</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">currency=</span><span class="f_CodeExample" style="color: #0000ff;">AccountInfoString</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ACCOUNT_CURRENCY</span><span class="f_CodeExample">);</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;2&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">equity=</span><span class="f_CodeExample" style="color: #0000ff;">AccountInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ACCOUNT_EQUITY</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;%s&nbsp;%d:&nbsp;account&nbsp;equity&nbsp;=&nbsp;%.2f&nbsp;%s&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">server,login,equity,currency);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;mandatory&nbsp;output&nbsp;of&nbsp;the&nbsp;+/-&nbsp;sign</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">profit=</span><span class="f_CodeExample" style="color: #0000ff;">AccountInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">ACCOUNT_PROFIT</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;%s&nbsp;%d:&nbsp;current&nbsp;result&nbsp;for&nbsp;open&nbsp;orders&nbsp;=&nbsp;%+.2f&nbsp;%s&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample">server,login,profit,currency);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;with&nbsp;variable&nbsp;number&nbsp;of&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">double</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">point_value=</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoDouble</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_POINT</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">string</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">format_string=</span><span class="f_CodeExample" style="color: #0000ff;">StringFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;%%s:&nbsp;point&nbsp;value&nbsp;&nbsp;=&nbsp;%%.%df&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">_Digits</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(format_string,</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,point_value);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;int&nbsp;value&nbsp;output</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;</span><span class="f_CodeExample">spread=(</span><span class="f_CodeExample" style="color: #0000ff;">int</span><span class="f_CodeExample">)</span><span class="f_CodeExample" style="color: #0000ff;">SymbolInfoInteger</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">SYMBOL_SPREAD</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;%s:&nbsp;current&nbsp;spread&nbsp;in&nbsp;points&nbsp;=&nbsp;%d&nbsp;&quot;</span><span class="f_CodeExample">,</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">_Symbol</span><span class="f_CodeExample">,spread);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;in&nbsp;the&nbsp;scientific&nbsp;(floating&nbsp;point)&nbsp;format&nbsp;with&nbsp;17&nbsp;meaningful&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;DBL_MAX&nbsp;=&nbsp;%.17e&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">DBL_MAX</span><span class="f_CodeExample">);</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;double&nbsp;value&nbsp;output&nbsp;in&nbsp;the&nbsp;scientific&nbsp;(floating&nbsp;point)&nbsp;format&nbsp;with&nbsp;17&nbsp;meaningful&nbsp;digits&nbsp;after&nbsp;the&nbsp;decimal&nbsp;point</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;EMPTY_VALUE&nbsp;=&nbsp;%.17e&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">EMPTY_VALUE</span><span class="f_CodeExample">);</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;output&nbsp;using&nbsp;PrintFormat()&nbsp;with&nbsp;default&nbsp;accuracy</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">PrintFormat</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;PrintFormat(EMPTY_VALUE)&nbsp;=&nbsp;%e&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">EMPTY_VALUE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #808080;">//---&nbsp;simple&nbsp;output&nbsp;using&nbsp;Print()</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #0000ff;">Print</span><span class="f_CodeExample">(</span><span class="f_CodeExample" style="color: #008080;">&quot;Print(EMPTY_VALUE)&nbsp;=&nbsp;&quot;</span><span class="f_CodeExample">,</span><span class="f_CodeExample" style="color: #0000ff;">EMPTY_VALUE</span><span class="f_CodeExample">);</span><br>
<span class="f_CodeExample" style="color: #808080;">/*&nbsp;execution&nbsp;result</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;MetaQuotes-Demo&nbsp;4236774:&nbsp;leverage&nbsp;=&nbsp;1:100</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;MetaQuotes-Demo&nbsp;4236774:&nbsp;account&nbsp;equity&nbsp;=&nbsp;9998.49&nbsp;USD</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;MetaQuotes-Demo&nbsp;4236774:&nbsp;current&nbsp;result&nbsp;for&nbsp;open&nbsp;orders&nbsp;=&nbsp;-1.51&nbsp;USD</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;EURJPY:&nbsp;point&nbsp;value&nbsp;&nbsp;=&nbsp;0.001</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;EURJPY:&nbsp;current&nbsp;spread&nbsp;in&nbsp;points&nbsp;=&nbsp;15&nbsp;</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;DBL_MAX&nbsp;=&nbsp;1.79769313486231570e+308</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;EMPTY_VALUE&nbsp;=&nbsp;2.14748364700000000e+009</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;PrintFormat(EMPTY_VALUE)&nbsp;=&nbsp;2.147484e+009</span><br>
<span class="f_CodeExample" style="color: #808080;">&nbsp;&nbsp;&nbsp;Print(EMPTY_VALUE)&nbsp;=&nbsp;2147483647</span><br>
<span class="f_CodeExample" style="color: #808080;">*/&nbsp;</span><span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;</span><br>
<span class="f_CodeExample" style="color: #ffffff;">&nbsp;&nbsp;</span><span class="f_CodeExample">}</span></p>
</td>
</tr>
</table>
</div>
<p class="p_FunctionRemark"><span class="f_FunctionRemark">&nbsp;</span></p>
<p class="p_BoldTitles"><span class="f_BoldTitles">See also</span></p>
<p class="p_SeeAlso"><span class="f_SeeAlso"><a href="stringformat.htm" class="topiclink">StringFormat()</a></span><span class="f_SeeAlso">, <a href="doubletostring.htm" class="topiclink">DoubleToString()</a>, <a href="double.htm" class="topiclink">Real types&nbsp;(double,&nbsp;float)</a></span></p>

<br>
</div>
</body>
</html>
